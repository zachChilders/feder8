name: CI (Simple)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Combined lint and format check
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:feder8.db
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --features sqlite

      - name: Setup database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  # Build the project
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:feder8.db
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --features sqlite

      - name: Setup database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Build
        run: cargo build --verbose

      - name: Build release
        run: cargo build --release --verbose

  # Run tests
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:feder8.db
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --features sqlite

      - name: Setup database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Run tests
        run: cargo test --verbose

      - name: Run integration tests
        run: cargo test --test integration_tests --verbose